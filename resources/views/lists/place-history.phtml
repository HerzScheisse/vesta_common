<?php

declare(strict_types=1);

use Cissee\WebtreesExt\Contracts\FactListUtils;
use Cissee\WebtreesExt\Contracts\FallbackAssociateFactUtils;
use Cissee\WebtreesExt\FactExt;
use Cissee\WebtreesExt\Functions\FunctionsPrintExtHelpLink;
use Cissee\WebtreesExt\Module\ModuleVestalInterface;
use Fisharebest\Webtrees\Auth;
use Fisharebest\Webtrees\Fact;
use Fisharebest\Webtrees\GedcomRecord;
use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Tree;
use Fisharebest\Webtrees\View;
use Illuminate\Support\Collection;
use Vesta\Hook\HookInterfaces\IndividualFactsTabExtenderInterface;
use Vesta\Hook\HookInterfaces\IndividualFactsTabExtenderUtils;
use Vesta\Model\FactFilter;
use Vesta\Model\PlaceHistory;
use Vesta\VestaUtils;
//use Ramsey\Uuid\Uuid;

/**
 * @var GedcomRecord               $record
 * @var Collection<int,Individual> $individuals
 * @var FactFilter                 $factFilter
 * @var Tree                       $tree
 * @var string                     $context
 * @var ModuleVestalInterface      $module
 * 
 * //$module must also provide getHelpAction for 'Predecessor'!
 * //$module may also provide preferences for 'RESTRICTED_PLACE_HISTORY'!
 */

// lists requires a unique ID in case there are multiple lists per page
//$table_id = 'place-history-' . Uuid::uuid4()->toString();

$filter = explode(',', $module->getPreference(
    'RESTRICTED_PLACE_HISTORY', 
    PlaceHistory::initialFactsStringForPreferences()));
$filter = array_combine($filter, $filter);


//TODO support FAM facts here as well?

$facts = $individuals
    ->flatMap(function ($individual) use ($filter, $factFilter): Collection {
        $individual_facts = $individual
            ->facts($filter)
            ->filter(function (Fact $fact) use ($factFilter) : bool {
                return $factFilter->filter($fact);
            });
        
        return $individual_facts;
    });

$additionalFacts = array();
$ret = IndividualFactsTabExtenderUtils::accessibleModules($module, $record->tree(), Auth::user())
    ->map(function (IndividualFactsTabExtenderInterface $module) use ($record) {
      return $module->hFactsTabGetAdditionalFacts($record);
    })
    ->toArray();

foreach ($ret as $r) {
    foreach ($r as $rr) {
        //do not filter here - these are expected to have their own checkbox!
        //and anyway some of them may not have a standard type anyway (Gov4Webtrees)
        //
        //$tag = explode(':', $rr->tag())[1];
        //if (in_array($tag, $filter, true)) {
            $additionalFacts[] = $rr;
        //}
    }
}

$facts = $facts->merge($additionalFacts);

//do not use original sort function here, which is intended for single INDI/FAM and reorders between dated/non-dated
$facts = FactExt::sortFacts($facts);

?>
    
<?php
//[RC] PATCHED
$outputBeforeTab = FactListUtils::getOutputBeforeTab($module, $record, false);
echo $outputBeforeTab->getMain();
View::push('javascript');
echo $outputBeforeTab->getScript();
View::endpush();
?>

<div class="wt-facts-tab py-4">
    <table class="table wt-facts-table">
        <tbody>
            <tr>
                <td colspan="2">
                    <?php foreach (PlaceHistory::getPicklistFacts() as $key => $v) : ?>
                        <?php if (array_key_exists($key, $filter)) : ?>
                            <label>
                                <?php
                                    //autocomplete off prevents firefox from caching checked state on reload (occured only in case of reload via reload button)
                                    //this caching is problematic because it messes up persistentToggle, which assumes unchecked state and therefore checks regardless of state
                                    //cf https://stackoverflow.com/questions/299811/why-does-the-checkbox-stay-checked-when-reloading-the-page
                                ?>
                                <input id="show-<?= $key ?>-in-place-history" type="checkbox" data-bs-toggle="collapse" data-bs-target=".wt-show-<?= $key ?>-in-place-history-<?= $context ?>" data-wt-persist="show-<?= $key ?>-in-place-history-<?= $context ?>" autocomplete="off">
                                <?= PlaceHistory::getLabel($key) ?>
                            </label>
                        <?php endif ?>
                    <?php endforeach ?>

                    <?php
                    //[RC] PATCHED
                    $outputInDescriptionbox = FactListUtils::getOutputInDescriptionbox($module, $record);
                    echo $outputInDescriptionbox->getMain();
                    View::push('javascript');
                    echo $outputInDescriptionbox->getScript();
                    View::endpush();
                    ?>
                </td>
            </tr>
        </tbody>
    </table>

    <table class="table wt-facts-table">
        <tbody>
            <?php
                $predecessors = [];
            ?>
            <?php foreach ($facts as $fact) : ?>
                <?php
                    $tag = explode(':', $fact->tag())[1];                
                    $styles = [];
                    $styles []= 'wt-show-'.$tag.'-in-place-history-'.$context.' collapse';
                ?>       
                <?= view(VestaUtils::vestaViewsNamespace() . '::fact', [                    
                    'fact'                   => $fact, 
                    'record'                 => $record, 
                    'module'                 => $module,
                    'useVestals'             => true, //TODO make configurable?
                    'hideCoordinates'        => true, //TODO make configurable?
                    'associateFactUtils'     => new FallbackAssociateFactUtils(),
                    'ownAdditionalStyles'    => $styles,
                    'predecessors'           => array_key_exists($tag, $predecessors)?$predecessors[$tag]:[],
                    'relToPredecessorSuffix' => FunctionsPrintExtHelpLink::helpLink($module->name(), 'Predecessor'),
                    ]) ?>
                <?php
                    //prepare next fact
                    $predecessors[$tag] = [$fact->record()];
                ?>
            <?php endforeach ?>

            <?php if ($facts->isEmpty()) : ?>
                <tr>
                    <td colspan="2">
                        <?= I18N::translate('No events of these specific types have occurred at this place.') ?>
                    </td>
                </tr>
            <?php endif ?>
        </tbody>
    </table>
</div>

<?php
//[RC] PATCHED
$outputAfterTab = FactListUtils::getOutputAfterTab($module, $record, false);
echo $outputAfterTab->getMain();
View::push('javascript');
echo $outputAfterTab->getScript();
View::endpush();
?>

<?php  
    $requests = [];

    if ($module->useVestals()) {
        foreach ($facts as $fact) {
            $requests = array_merge($requests, $module->functionsVestals()->vestalsForFactPlace($fact));
        }        
    }

    $url = $module->functionsVestals()->vestalsActionUrl();
?>
    
<?php if (sizeof($requests) > 0) : ?>
    <?php View::push('javascript') ?>
    <script>
    //load via ajax
    $.ajax({
          url : "<?= $url ?>",
          type: "POST",
          data: JSON.stringify(<?= json_encode(array_values($requests)) ?>),
          contentType: "application/json; charset=utf-8",
          dataType   : "json",
          success    : function(arr) {
            for (i = 0; i < arr.length; i++) {
              $("."+arr[i].classAttr).replaceWith(arr[i].html);
            }
          }
    });
    </script>
    <?php View::endpush() ?>
<?php endif ?>
